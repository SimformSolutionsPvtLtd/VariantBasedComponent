
# # Resolve react_native_pods.rb with node to allow for hoisting
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, '16.0'
prepare_react_native_project!
use_modular_headers!

# ⬇️ uncomment wanted permissions
setup_permissions([
  # 'Camera',
  # 'Notifications',
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

def shared_pod
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
end

target 'VariantBasedComponent' do
  shared_pod
  config = use_native_modules!

  target 'VariantBasedComponentTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    config = use_native_modules!
    puts "Config: #{config.inspect}"
    puts "React Native Path: #{config[:reactNativePath]}"
  
    begin
      react_native_post_install(
        installer,
        config[:reactNativePath],
        :mac_catalyst_enabled => false
      )
    rescue => e
      puts "Error in react_native_post_install: #{e.message}"
      puts e.backtrace
    end
  end
end

target 'VariantBasedComponent-Dev' do
  shared_pod
end

target 'VariantBasedComponent-Stage' do
  shared_pod
end

